module Controller (
    opcode,
    func,
    jump,
    store,
    inc,
    load,
	add,
	sub,
    reg_write
);
    input [3:0] opcode;
    output reg [1:0] func;
    output jump;
    output store;
    output reg inc;
    output load;
    output reg_write;
	
	output reg add;
	output reg sub;
	reg store;
	reg load;
	reg jump;
	reg reg_write;
	  
	always @(*)
	begin
		case ( opcode)
		  4'b0000  : begin add   <= 1; func  <= 0; reg_write<=1; end
		  4'b0001  : begin sub   <= 1; func  <= 1; reg_write<=1; end
		  4'b0010  : load  <= 1;
		  4'b0100  : begin store <= 1;  reg_write<=1; end
		  4'b1000  :  jump  <= 1; 
		  4'b1111  :  inc  <= 1; 
		  default : inc <= 0; 
		endcase
	end
	
endmodule
